name: Pull request validation

on:
  pull_request:
    branches: [dev]
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Validate core functionality
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
    
    - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool install dotnet-sonarscanner --tool-path .\.sonar\scanner
    
    - name: Initialize the Sonar scanning process
      shell: powershell
      run: .\.sonar\scanner\dotnet-sonarscanner begin /k:"TryAtSoftware_Randomizer" /o:"tryatsoftware" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

    - name: Restore dependencies
      run: dotnet restore
    - name: Build the solution
      run: dotnet build --no-restore
    - name: Test the solution
      run: dotnet test --no-build --verbosity normal --collect="Code coverage"
    
    - name: Finalize the Sonar scanning process
      shell: powershell
      run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
    

